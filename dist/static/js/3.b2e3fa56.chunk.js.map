{"version":3,"sources":["Components/BookingList/index.js","Container/BookingListContainer/index.js","Components/RctSectionLoader/RctSectionLoader.js","Components/RctCollapsibleCard/RctCollapsibleCard.js","Components/PageTitleBar/PageTitleBar.js"],"names":["BookingList","state","all","selectedBooking","loading","selectedBookings","initCalendar","this","props","loadBookings","react_default","a","createElement","className","Helmet","name","content","PageTitleBar","title","match","RctCollapsibleCard","fullBlock","bookings","dist_default","currentType","data","columns","options","filter","display","sort","filterType","fixedHeader","responsive","print","download","RctSectionLoader","Component","BookingListContainer","connect","_ref","authUser","allData","user","bookingsData","dispatch","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_1___default","reload","collapse","close","setState","self","setTimeout","_this2","_this$state","_this$props","children","collapsible","closeable","reloadable","heading","colClasses","customClasses","headingCustomClasses","contentCustomClasses","badge","react__WEBPACK_IMPORTED_MODULE_5___default","classnames","d-block","concat","d-none","reactstrap__WEBPACK_IMPORTED_MODULE_6__","color","class","onClick","onCollapse","onReload","onCloseSection","isOpen","rct-block-content","rct-full-block","_RctSectionLoader_RctSectionLoader__WEBPACK_IMPORTED_MODULE_8__","defaultProps","enableBreadCrumb"],"mappings":"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","file":"static/js/3.b2e3fa56.chunk.js","sourcesContent":["/* eslint-disable react/jsx-no-target-blank */\n/* eslint-disable no-undef */\n/*\n * Instance Management Page\n */\nimport React, { Component } from 'react'\nimport { Helmet } from 'react-helmet'\nimport MUIDataTable from 'mui-datatables'\n\n// delete confirmation dialog\n// import DeleteConfirmationDialog from 'Components/DeleteConfirmationDialog/DeleteConfirmationDialog'\n\n// page title bar\nimport PageTitleBar from 'Components/PageTitleBar/PageTitleBar'\n\n// rct card box\nimport RctCollapsibleCard from 'Components/RctCollapsibleCard/RctCollapsibleCard'\n\n// rct section loader\nimport RctSectionLoader from 'Components/RctSectionLoader/RctSectionLoader'\nimport { initCalendar } from 'Util/Calendar'\n\nexport default class BookingList extends Component {\n\n    state = {\n        all: false,\n        selectedBooking: null, // selected instance to perform operations\n        loading: false, // loading activity\n        selectedBookings: 0,\n    }\n\n    componentDidMount() {\n        initCalendar()\n        this.props.loadBookings()\n\n    }\n  \n    render() {\n        const { loading } = this.state\n\n        const options = {\n            filterType: 'dropdown',\n            fixedHeader: false,\n            responsive: 'scroll',\n            print: false,\n            download: false,\n        }\n\n        const columns = [\n            {\n                name: 'ID',\n                options: {\n                    filter: false,\n                    display: false,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Full Name',\n                options: {\n                    filter: false,\n                    display: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'E-mail',\n                options: {\n                    filter: false,\n                    display: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Phone Number',\n                options: {\n                    filter: false,\n                    display: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Booking Time',\n                options: {\n                    filter: false,\n                    display: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Site Visit Address',\n                options: {\n                    filter: false,\n                    display: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Latitude',\n                options: {\n                    filter: false,\n                    display: false,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Longitude',\n                options: {\n                    filter: false,\n                    display: false,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Sales Person Id',\n                options: {\n                    filter: false,\n                    display: false,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Sales Person',\n                options: {\n                    filter: true,\n                    sort: true,\n                },\n            },\n        ]\n\n        return (\n            <div className=\"user-management\">\n                <Helmet>\n                    <title>Site Visit Booking| Booking List </title>\n                    <meta name=\"description\" content=\"Site Visit Booking List\" />\n                </Helmet>\n                <PageTitleBar\n                    title='Booking List'\n                    match={ this.props.match }\n                />\n\n                <RctCollapsibleCard fullBlock>\n\n                    <div className=\"table-responsive\">\n\n                        {this.props.bookings ? <MUIDataTable\n                            title={ this.state.currentType }\n                            data={ this.props.bookings }\n                            columns={ columns }\n                            options={ options }\n                        /> : ''}\n\n                    </div>\n                    {loading &&\n                        <RctSectionLoader />\n                    }\n                </RctCollapsibleCard>\n                \n            </div>\n        )\n    }\n}\n","import {connect} from 'react-redux'\nimport BookingList from 'Components/BookingList'\n\n// redux action \nimport {\n    loadBookings,\n} from 'Actions'\n\n// map state to props\nconst mapStateToProps = ({ authUser, allData }) => {\n    const { user } = authUser\n    const { data, loading, bookings, bookingsData } = allData\n    return { user, data, loading, bookings, bookingsData }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        loadBookings: () => {\n            dispatch(loadBookings())\n        },\n    }\n}\n\nconst BookingListContainer = connect(mapStateToProps, mapDispatchToProps)(BookingList)\n\nexport default BookingListContainer\n","/**\n * Rct Section Loader\n */\nimport React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst RctSectionLoader = () => (\n    <div className=\"d-flex justify-content-center loader-overlay\">\n        <CircularProgress />\n    </div>\n)\n\nexport default RctSectionLoader\n","/**\n * Rct Collapsible Card\n */\nimport React, { Component } from 'react'\nimport { Collapse, Badge } from 'reactstrap'\nimport classnames from 'classnames'\n\n// rct section loader\nimport RctSectionLoader from '../RctSectionLoader/RctSectionLoader'\n\nclass RctCollapsibleCard extends Component {\n\n    state = {\n        reload: false,\n        collapse: true,\n        close: false,\n    }\n\n    onCollapse() {\n        this.setState({ collapse: !this.state.collapse })\n    }\n\n    onReload() {\n        this.setState({ reload: true })\n        const self = this\n        setTimeout(() => {\n            self.setState({ reload: false })\n        }, 1500)\n    }\n\n    onCloseSection() {\n        this.setState({ close: true })\n    }\n\n    render() {\n        const { close, reload, collapse } = this.state\n        const { children, collapsible, closeable, reloadable, heading, fullBlock, colClasses, customClasses, headingCustomClasses, contentCustomClasses, badge } = this.props\n        return (\n            <div className={ classnames(colClasses ? colClasses : '', { 'd-block': !collapse }) }>\n                <div className={ classnames(`rct-block ${customClasses ? customClasses : ''}`, { 'd-none': close }) }>\n                    {heading &&\n                        <div className={ `rct-block-title ${headingCustomClasses ? headingCustomClasses : ''}` }>\n                            <h4>{heading} {badge && <Badge className=\"p-1 ml-10\" color={ badge.class }>{badge.name}</Badge>}</h4>\n                            {(collapsible || reloadable || closeable) &&\n                                <div className=\"contextual-link\">\n                                    {collapsible && <div onClick={ () => this.onCollapse() }><i className=\"ti-minus\"></i></div>}\n                                    {reloadable && <div onClick={ () => this.onReload() }><i className=\"ti-reload\"></i></div>}\n                                    {closeable && <div onClick={ () => this.onCloseSection() }><i className=\"ti-close\"></i></div>}\n                                </div>\n                            }\n                        </div>\n                    }\n                    <Collapse isOpen={ collapse }>\n                        <div className={ classnames(contentCustomClasses ? contentCustomClasses : '', { 'rct-block-content': !fullBlock, 'rct-full-block': fullBlock }) }>\n                            {children}\n                        </div>\n                    </Collapse>\n                    {reload && <RctSectionLoader />}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RctCollapsibleCard\n","/**\n * Page Title Bar Component\n * Used To Display Page Title & Breadcrumbs\n */\nimport React from 'react'\n\nconst PageTitleBar = ({ title }) => {\n    \n    return (\n        <div className=\"page-title d-flex justify-content-between align-items-center\">\n            {title &&\n                <div className=\"page-title-wrap\">\n                    <i className=\"ti-angle-left\"></i>\n                    <h2 className=\"\">{title}</h2>\n                </div>\n            }\n        </div>\n    )\n}\n\n// default props value\nPageTitleBar.defaultProps = {\n    enableBreadCrumb: true,\n}\n\nexport default PageTitleBar\n"],"sourceRoot":""}