{"version":3,"sources":["Components/ClientContact/index.js","Container/ClientContactContainer/index.js","Components/RctSectionLoader/RctSectionLoader.js"],"names":["scopes","DISCOVERY_DOCS","ClientContact","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","full_name","email","phone","sign","updateSigninStatus","isSignedIn","setState","gapi","auth2","getAuthInstance","signIn","handlerBook","booking","initBooking","endDate","Date","pick_time","getTime","setHours","getHours","event","summary","address_name","location","description","start","dateTime","timeZone","end","recurrence","attendees","s_email","reminders","request","client","calendar","events","insert","calendarId","process","resource","that","assertThisInitialized","execute","event1","eid","id","postBook","history","push","load","init","apiKey","client_id","discoveryDocs","scope","then","listen","get","_this2","react_default","a","createElement","className","htmlFor","value","onChange","e","target","type","name","data-error","onClick","loading","RctSectionLoader","React","Component","ClientContactContainer","connect","_ref","authUser","allData","user","data","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_1___default"],"mappings":"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","file":"static/js/6.b0d69d5d.chunk.js","sourcesContent":["/* eslint-disable no-undef */\n/**\n * Client Contact Page\n */\nimport React from 'react'\nimport RctSectionLoader from 'Components/RctSectionLoader/RctSectionLoader'\nimport { history } from '../../history'\n// import ApiCalendar from 'react-google-calendar-api'\n//AIzaSyCXd3M-Cb0KvyBMKTNS23nfaoiez6l51Go\nconst scopes = 'https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events'\nconst DISCOVERY_DOCS = ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest']\n\nclass ClientContact extends React.Component {\n    state = {\n        full_name: '',\n        email: '',\n        phone: '',\n        sign: false,\n    }\n\n    constructor(props) {\n        super(props)\n        const that = this\n        function start() {\n            gapi.client\n                .init({\n                    apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n                    client_id: process.env.REACT_APP_CLIENT_ID,\n                    discoveryDocs: DISCOVERY_DOCS,\n                    scope: scopes,\n                })\n                .then(function () {\n                    // Listen for sign-in state changes.\n                    gapi.auth2.getAuthInstance().isSignedIn.listen(that.updateSigninStatus)\n\n                    // Handle the initial sign-in state.\n                    that.updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get())\n\n                })\n        }\n        gapi.load('client:auth2', start)\n\n    }\n\n    updateSigninStatus = (isSignedIn) => {\n        // console.log('login' + isSignedIn)\n        if (isSignedIn) {\n            this.setState({sign: true})\n            // console.log('loginOK' + isSignedIn)\n        } else {\n            // console.log('login' + isSignedIn)\n            gapi.auth2.getAuthInstance().signIn()\n        }\n    }\n    \n    componentDidMount() {\n        const booking = this.props.initBooking\n        if (booking === null) {\n            history.push('/')\n            return\n        }\n    }\n    handlerBook = () => {\n        const booking = this.props.initBooking\n        if (booking === null) {\n            history.push('/')\n            return  \n        }\n        booking.full_name = this.state.full_name\n        booking.email = this.state.email\n        booking.phone = this.state.phone\n\n        // \n\n        const endDate = new Date(booking.pick_time.getTime())\n        endDate.setHours(endDate.getHours() + 1)\n        // console.log(endDate)\n        const event = {\n            'summary': booking.address_name,\n            'location': booking.address_name,\n            'description': 'Site Visit Booking description',\n            'start': {\n                'dateTime': booking.pick_time,\n                'timeZone': 'Australia/Sydney',\n            },\n            'end': {\n                'dateTime': endDate,\n                'timeZone': 'Australia/Sydney',\n            },\n            'recurrence': [\n                \n            ],\n            'attendees': [\n                booking.s_email,\n            ],\n            'reminders': {\n            },\n        }\n          \n        const request = gapi.client.calendar.events.insert({\n            'calendarId': process.env.REACT_APP_CALENDAR_ID,\n            'resource': event,\n        })\n\n        const that = this\n        request.execute(function(event1) {\n            // console.log('Event created:')\n            // console.log(event1)\n            if (event1) {\n                booking.eid = event1.id\n                that.props.postBook(booking)\n            }\n        })\n    }\n\n    render() {\n\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"solo\">\n                    <div className=\"header\">\n                        <div className=\"js-profile-region\">\n                            <div className=\"wrapper\">\n                                <div className=\"icon-arrow-left js-step-back step-back\">&nbsp;</div>\n                                <div className=\"title-wrapper\">\n                                    <div className=\"mbs phs popover-holder\">\n                                        <div className=\"increased popover-toggle silent disabled\">\n                                            \n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr className=\"mbl\" />\n                    <div className=\"wrapper\">\n                        <div className=\"row\">\n                            <div className=\"col-lg-12\">\n                                <h2 className=\"mbm\">Enter Details</h2>\n\n                                <div className=\"mt-10\"><div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"full_name\">Full Name *</label>\n                                        <input value={ this.state.full_name } onChange={ e => this.setState({ full_name: e.target.value }) } className=\"large-text form-control\" type=\"text\" name=\"full_name\" />\n                                        <span data-error=\"full_name\"></span>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"email\">Your e-mail address *</label>\n                                        <input value={ this.state.email } onChange={ e => this.setState({ email: e.target.value }) } className=\"large-text form-control\" type=\"email\" name=\"email\" />\n                                        <span data-error=\"email\"></span>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"phonenumber\">Your phone number *</label>\n                                        <input value={ this.state.phone } onChange={ e => this.setState({ phone: e.target.value }) } className=\"large-text form-control\" type=\"text\" name=\"phonenumber\" />\n                                        <span data-error=\"phonenumber\"></span>\n                                    </div>\n                                </div></div>\n                                <div className=\"ptm\">\n                                    <button className=\"mr-10 mb-10 btn btn-primary\" onClick={ e => this.handlerBook(e) }>BOOK</button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {this.props.loading &&\n                    <RctSectionLoader />\n                }\n            </div>\n        )\n    }\n}\n\nexport default ClientContact\n","import {connect} from 'react-redux'\nimport ClientContact from 'Components/ClientContact'\n\n// redux action \nimport {\n    postBook,\n} from 'Actions'\n// map state to props\nconst mapStateToProps = ({ authUser, allData }) => {\n    const { user } = authUser\n    const { data, loading, initBooking } = allData\n    return { user, data, loading, initBooking }\n}\n\nconst ClientContactContainer = connect(mapStateToProps, {\n    postBook,\n})(ClientContact)\n\nexport default ClientContactContainer\n","/**\n * Rct Section Loader\n */\nimport React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst RctSectionLoader = () => (\n    <div className=\"d-flex justify-content-center loader-overlay\">\n        <CircularProgress />\n    </div>\n)\n\nexport default RctSectionLoader\n"],"sourceRoot":""}