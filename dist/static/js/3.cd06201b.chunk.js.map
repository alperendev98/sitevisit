{"version":3,"sources":["Components/BookingList/index.js","Container/BookingListContainer/index.js","Components/RctSectionLoader/RctSectionLoader.js","Components/RctCollapsibleCard/RctCollapsibleCard.js","Components/PageTitleBar/PageTitleBar.js"],"names":["BookingList","state","all","selectedBooking","loading","selectedBookings","this","props","loadBookings","data","refs","deleteConfirmationDialog","open","setState","deleteSalesperson","sp_pk","booking","checked","bookings","instances","map","instanceData","id","e","_this$state","length","selectAllInstances","instance","selectedinstances","unselectedInstances","selectedInstances","react_default","a","createElement","className","Helmet","name","content","PageTitleBar","title","match","RctCollapsibleCard","fullBlock","dist_default","currentType","columns","options","filter","display","sort","filterType","fixedHeader","responsive","print","download","RctSectionLoader","Component","BookingListContainer","connect","_ref","authUser","allData","user","dispatch","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_1___default","reload","collapse","close","self","setTimeout","_this2","_this$props","children","collapsible","closeable","reloadable","heading","colClasses","customClasses","headingCustomClasses","contentCustomClasses","badge","react__WEBPACK_IMPORTED_MODULE_5___default","classnames","d-block","concat","d-none","reactstrap__WEBPACK_IMPORTED_MODULE_6__","color","class","onClick","onCollapse","onReload","onCloseSection","isOpen","rct-block-content","rct-full-block","_RctSectionLoader_RctSectionLoader__WEBPACK_IMPORTED_MODULE_8__","defaultProps","enableBreadCrumb"],"mappings":"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","file":"static/js/3.cd06201b.chunk.js","sourcesContent":["/*\n * Instance Management Page\n */\nimport React, { Component } from 'react'\nimport { Helmet } from 'react-helmet'\n\nimport MUIDataTable from 'mui-datatables'\n\n// delete confirmation dialog\n// import DeleteConfirmationDialog from 'Components/DeleteConfirmationDialog/DeleteConfirmationDialog'\n\n// page title bar\nimport PageTitleBar from 'Components/PageTitleBar/PageTitleBar'\n\n// rct card box\nimport RctCollapsibleCard from 'Components/RctCollapsibleCard/RctCollapsibleCard'\n\n// rct section loader\nimport RctSectionLoader from 'Components/RctSectionLoader/RctSectionLoader'\n\nexport default class BookingList extends Component {\n\n    state = {\n        all: false,\n        selectedBooking: null, // selected instance to perform operations\n        loading: false, // loading activity\n        selectedBookings: 0,\n    }\n\n    componentDidMount() {\n        this.props.loadBookings()\n    }\n\n    //On Delete\n\n    onDelete(data) {\n        // eslint-disable-next-line react/no-string-refs\n        this.refs.deleteConfirmationDialog.open()\n        this.setState({ selectedBooking: data })\n    }\n\n    //Delete Instance Permanently\n    \n    deleteInstancePermanently() {\n        const { selectedBooking } = this.state\n        this.props.deleteSalesperson(selectedBooking.sp_pk)\n    }\n\n    //On Reload\n    \n    onReload() {\n        this.props.loadBookings()\n    }\n\n    // On Select Instance\n    \n    onSelectInstance(booking) {\n        booking.checked = !booking.checked\n        let selectedBookings = 0\n        const bookings = this.state.instances.map(instanceData => {\n            if (instanceData.checked) {\n                selectedBookings++\n            }\n            if (instanceData.id === booking.id) {\n                if (instanceData.checked) {\n                    selectedBookings++\n                }\n                return booking\n            } else {\n                return instanceData\n            }\n        })\n        this.setState({ bookings, selectedBookings })\n    }\n\n    //Select All instance\n    onSelectAllInstance(e) {\n        const { selectedBookings, instances } = this.state\n        const selectAll = selectedBookings < instances.length\n        if (selectAll) {\n            const selectAllInstances = instances.map(instance => {\n                instance.checked = true\n                return instance\n            })\n            this.setState({ instances: selectAllInstances, selectedinstances: selectAllInstances.length })\n        } else {\n            const unselectedInstances = instances.map(instance => {\n                instance.checked = false\n                return instance\n            })\n            this.setState({ selectedInstances: 0, instances: unselectedInstances })\n        }\n    }\n\n    render() {\n        const { loading } = this.state\n\n        const options = {\n            filterType: 'dropdown',\n            fixedHeader: false,\n            responsive: 'scroll',\n            print: false,\n            download: false,\n        }\n\n        const columns = [\n            {\n                name: 'ID',\n                options: {\n                    filter: false,\n                    display: false,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Full Name',\n                options: {\n                    filter: false,\n                    display: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'E-mail',\n                options: {\n                    filter: false,\n                    display: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Phone Number',\n                options: {\n                    filter: false,\n                    display: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Booking Time',\n                options: {\n                    filter: false,\n                    display: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Site Visit Address',\n                options: {\n                    filter: false,\n                    display: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Latitude',\n                options: {\n                    filter: false,\n                    display: false,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Longitude',\n                options: {\n                    filter: false,\n                    display: false,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Sales Person Id',\n                options: {\n                    filter: false,\n                    display: false,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Sales Person',\n                options: {\n                    filter: true,\n                    sort: true,\n                },\n            },\n        ]\n\n        return (\n            <div className=\"user-management\">\n                <Helmet>\n                    <title>Site Visit Booking| Booking List </title>\n                    <meta name=\"description\" content=\"Site Visit Booking List\" />\n                </Helmet>\n                <PageTitleBar\n                    title='Booking List'\n                    match={ this.props.match }\n                />\n\n                <RctCollapsibleCard fullBlock>\n\n                    <div className=\"table-responsive\">\n\n                        {this.props.bookings ? <MUIDataTable\n                            title={ this.state.currentType }\n                            data={ this.props.bookings }\n                            columns={ columns }\n                            options={ options }\n                        /> : ''}\n\n                    </div>\n                    {loading &&\n                        <RctSectionLoader />\n                    }\n                </RctCollapsibleCard>\n\n            </div>\n        )\n    }\n}\n","import {connect} from 'react-redux'\nimport BookingList from 'Components/BookingList'\n\n// redux action \nimport {\n    loadBookings,\n} from 'Actions'\n\n// map state to props\nconst mapStateToProps = ({ authUser, allData }) => {\n    const { user } = authUser\n    const { data, loading, bookings } = allData\n    return { user, data, loading, bookings }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        loadBookings: () => {\n            dispatch(loadBookings())\n        },\n    }\n}\n\nconst BookingListContainer = connect(mapStateToProps, mapDispatchToProps)(BookingList)\n\nexport default BookingListContainer\n","/**\n * Rct Section Loader\n */\nimport React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst RctSectionLoader = () => (\n    <div className=\"d-flex justify-content-center loader-overlay\">\n        <CircularProgress />\n    </div>\n)\n\nexport default RctSectionLoader\n","/**\n * Rct Collapsible Card\n */\nimport React, { Component } from 'react'\nimport { Collapse, Badge } from 'reactstrap'\nimport classnames from 'classnames'\n\n// rct section loader\nimport RctSectionLoader from '../RctSectionLoader/RctSectionLoader'\n\nclass RctCollapsibleCard extends Component {\n\n    state = {\n        reload: false,\n        collapse: true,\n        close: false,\n    }\n\n    onCollapse() {\n        this.setState({ collapse: !this.state.collapse })\n    }\n\n    onReload() {\n        this.setState({ reload: true })\n        const self = this\n        setTimeout(() => {\n            self.setState({ reload: false })\n        }, 1500)\n    }\n\n    onCloseSection() {\n        this.setState({ close: true })\n    }\n\n    render() {\n        const { close, reload, collapse } = this.state\n        const { children, collapsible, closeable, reloadable, heading, fullBlock, colClasses, customClasses, headingCustomClasses, contentCustomClasses, badge } = this.props\n        return (\n            <div className={ classnames(colClasses ? colClasses : '', { 'd-block': !collapse }) }>\n                <div className={ classnames(`rct-block ${customClasses ? customClasses : ''}`, { 'd-none': close }) }>\n                    {heading &&\n                        <div className={ `rct-block-title ${headingCustomClasses ? headingCustomClasses : ''}` }>\n                            <h4>{heading} {badge && <Badge className=\"p-1 ml-10\" color={ badge.class }>{badge.name}</Badge>}</h4>\n                            {(collapsible || reloadable || closeable) &&\n                                <div className=\"contextual-link\">\n                                    {collapsible && <div onClick={ () => this.onCollapse() }><i className=\"ti-minus\"></i></div>}\n                                    {reloadable && <div onClick={ () => this.onReload() }><i className=\"ti-reload\"></i></div>}\n                                    {closeable && <div onClick={ () => this.onCloseSection() }><i className=\"ti-close\"></i></div>}\n                                </div>\n                            }\n                        </div>\n                    }\n                    <Collapse isOpen={ collapse }>\n                        <div className={ classnames(contentCustomClasses ? contentCustomClasses : '', { 'rct-block-content': !fullBlock, 'rct-full-block': fullBlock }) }>\n                            {children}\n                        </div>\n                    </Collapse>\n                    {reload && <RctSectionLoader />}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RctCollapsibleCard\n","/**\n * Page Title Bar Component\n * Used To Display Page Title & Breadcrumbs\n */\nimport React from 'react'\n\nconst PageTitleBar = ({ title }) => {\n    \n    return (\n        <div className=\"page-title d-flex justify-content-between align-items-center\">\n            {title &&\n                <div className=\"page-title-wrap\">\n                    <i className=\"ti-angle-left\"></i>\n                    <h2 className=\"\">{title}</h2>\n                </div>\n            }\n        </div>\n    )\n}\n\n// default props value\nPageTitleBar.defaultProps = {\n    enableBreadCrumb: true,\n}\n\nexport default PageTitleBar\n"],"sourceRoot":""}